name: Build Package and Create Docker Image

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
      - docker

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: docker_image

jobs:
  build:

    runs-on: ubuntu-16.04

    steps:
    - uses: actions/checkout@v1
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    - name: Build with Maven
      run:
        mvn clean package --file docker-spring-boot/pom.xml

    - uses: actions/checkout@v1

    - run: mkdir -p target/

    - run: echo hello > target/spring-boot-web.jar

    - uses: actions/upload-artifact@v1
      with:
       name: spring-boot-web
       path: target/
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    needs: build

    runs-on: ubuntu-16.04
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v1
        with:
          name: spring-boot-web
          path: target/

      - name: Build image
        run: docker build . --file docker-spring-boot/Dockerfile --tag image

      - name: Log into registry
        run: echo "${{ secrets.GH_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo ${{github.ref}}

          docker tag image $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
